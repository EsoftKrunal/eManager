using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.ComponentModel;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.SessionState;
using System.Web.UI;
using System.Data.Common;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Transactions;
using Microsoft.Practices.EnterpriseLibrary.Data;

/// <summary>
/// Summary description for ProposalToOwner
/// </summary>
public class ProposalToOwner
{

    public ProposalToOwner()
    {
        //
        // TODO: Add constructor logic here
        //
    }
    public static void insertProposalToOwnerDetails(string _strProc, Int32 _candidateId, Int32 _ownerId, string _OfficerRemarks, string _FromEmail, string _ToEmail, string _BCCEmail, string _Subject, string _body, Int32 _createdby, string  _randompwd)
    {
        Database oDatabase = DatabaseFactory.CreateDatabase();


        DbCommand odbCommand = oDatabase.GetStoredProcCommand(_strProc);
        oDatabase.AddInParameter(odbCommand, "@CandidateId", DbType.Int32, _candidateId);
        oDatabase.AddInParameter(odbCommand, "@ownerId", DbType.Int32, _ownerId);
        oDatabase.AddInParameter(odbCommand, "@officerremarks", DbType.String, _OfficerRemarks);
        oDatabase.AddInParameter(odbCommand, "@fromEmail", DbType.String, _FromEmail);
        oDatabase.AddInParameter(odbCommand, "@ToEmail", DbType.String, _ToEmail);
        oDatabase.AddInParameter(odbCommand, "@BCCEmail", DbType.String, _BCCEmail);
        oDatabase.AddInParameter(odbCommand, "@subject", DbType.String, _Subject.ToString().Trim());
        oDatabase.AddInParameter(odbCommand, "@body", DbType.String, _body.ToString().Trim());
        oDatabase.AddInParameter(odbCommand, "@createdby", DbType.Int32, _createdby);
        oDatabase.AddInParameter(odbCommand, "@randomPwd", DbType.String, _randompwd.ToString().Trim());

        using (TransactionScope scope = new TransactionScope())
        {
            try
            {
                // execute command and get records
                oDatabase.ExecuteNonQuery(odbCommand);
                scope.Complete();
            }
            catch (Exception ex)
            {
                // if error is coming throw that error
                throw ex;
            }
            finally
            {
                // after used dispose commmond            
                odbCommand.Dispose();
            }
        }
    }


}